demo(graphics)
demo(graphic)
demo(graphics)
demo(perse)
data <- read.delim(/Users/brown/Documents/Berkeley/dataviz-fall-2013/Chicago-guns)
setwd(/Users/brown/Documents/Berkeley/dataviz-fall-2013/Chicago-guns)
data <- read.delim(/Users/brown/Documents/Berkeley/dataviz-fall-2013/Chicago-guns)
data <- read.delim(/Users/brown/Documents/Berkeley/dataviz-fall-2013/Chicago-guns)
setwd("/Users/brown/Documents/Berkeley/dataviz-fall-2013/Chicago-guns")
data <- read.delim(county-data.txt)
data <- read.delim("county-data.txt")
head(data)
names(data) <- c("county_orig", "guns_orig")
head(data)
split <- strsplit(data$county_orig, split="\\(")
split <- strsplit(data$county_orig, split="\\(")
split <- strsplit(data$county_orig, split="\\(")
split <- strsplit(data$county_orig, split="\\)")
setwd("/Users/brown/Documents/Berkeley/dataviz-fall-2013/Chicago-guns")
library(maptools)
et_second_element <- function(item) {
return (item[2])
}
get_second_element <- function(item) {
return (item[2])
}
get_first_element <- function(item) {
return (item[1])
}
data <- read.delim("county-data.txt")
data <- read.delim("county-data.txt", header=F, stringsAsFactors=F)
head(data)
names(data) <- c("county_orig", "guns_orig")
head(data)
split <- strsplit(data$county_orig, split="\\(")
data$state_clean <- sapply(split, get_second_element)
head(data)
data$state_clean <- gsub("\\)", "", data$state_clean)
head(data)
data$county_clean <- sapply(split, get_first_element)
head(data)
data$guns_clean <- as.numeric(gsub(",", "", data$guns_orig))
head(data)
agg <- aggregate(data$guns_clean, list(data$state_clean), sum)
head(agg)
names(agg) <- c("STATE_ABBR", "total_guns")
head(agg)
states <- readShapePoly("nytlayout_state/nytlayout_state.shp")
plot(states)
map_data <- data.frame(states)
head(map_data)
head(agg)
agg <- subset(agg, STATE_ABBR%in%map_data$STATE_ABBR)
dim(agg)
dim(map_data)
head(agg)
head(map_data)
match(map_data$STATE_ABBR, agg$STATE_ABBR)
match_order <- match(map_data$STATE_ABBR, agg$STATE_ABBR)
agg[match_order,]
agg <- agg[match_order,]
head(agg)
head(map_data)
merge(map_data, agg)
merge(map_data, agg, by="STATE_ABBR")
head(data)
merged_geo_data <- merge(map_data, agg, by="STATE_ABBR")
hist(merged_geo_data)
head(merged_geo_data)
match_order <- match(map_data$STATE_ABBR, merged_geo_data$STATE_ABBR)
merged_geo_data <- merged_geo_data[match_order,]
head(merged_geo_data)
hist(merged_geo_data$total_guns)
hist(merged_geo_data$total_guns, breaks=c(0, 500, 1000, 3000, 5000, 30000))
break_values <- breaks=c(0, 500, 1000, 3000, 5000, 30000)
break_values <- c(0, 500, 1000, 3000, 5000, 30000)
cut(merged_geo_data, breaks=break_values)
cut(merged_geo_data$total_guns, breaks=break_values)
as.numeric(cut(merged_geo_data$total_guns, breaks=break_values))
merged_geo_data$bucket <- as.numeric(cut(merged_geo_data$total_guns, breaks=break_values))
head(merged_geo_data$bucket)
head(merged_geo_data)
dim(bucket)
unique(merged_geo_data$bucket)
install.packages("RColorBrewer")
library(RColorBrewer)
display.brewer.all()
colors <- brewer.pal(5, "Greens")
colors
plot(shapes, col=colors[numeric_buckets])
colors[numeric_buckets]
head(merged_geo_data)
colors(merged_geo_data$bucket)
mycols <- brewer.pal(5, "Greens")
mycols
head(merged_geo_data)
merged_geo_data$bucket
mycols[merged_geo_data$bucket]
plot(states, col=(mycols[merged_geo_data$bucket]))
plot(states)
points(coordinates(shapes))
points(coordinates(states))
points(coordinates(states), cex=merged_geo_data$total_guns)
points(coordinates(states), cex=merged_geo_data$total_guns/1000)
points(coordinates(states), cex=merged_geo_data$total_guns/10000)
plot(states)
points(coordinates(states), cex=merged_geo_data$total_guns/10000)
plot(states)
points(coordinates(states), cex=merged_geo_data$total_guns/1000)
points(coordinates(states), cex=sqrt(merged_geo_data$total_guns/1000))
plot(states)
points(coordinates(states), cex=sqrt(merged_geo_data$total_guns/1000))
class(states)
data.frame(shapes)
data.frame(states)
head(shapes)
shapes <- states
head(shapes)
names(shapes)
shapes
coordinates(shapes)
plot(states)
plot(states)
data <- read.csv("ssamatab1.csv")
ca <- subset(data, data$ST.FIPS.Code == 06)
ca_workforce_by_year <- aggregate(ca$Civilian.Labor.Force, list(ca$Year), sum)
names(ca_workforce_by_year)[1] <- "Year"
names(ca_workforce_by_year)[2] <- "ca_total_workforce"
ca_unemployment_by_year <- aggregate(ca$Unemployment, list(ca$Year), sum)
names(ca_unemployment_by_year)[1] <- "Year"
names(ca_unemployment_by_year)[2] <-"ca_total_unemployment"
ca_unemployment_rate <- merge(ca_workforce_by_year, ca_unemployment_by_year, by="Year")
ca_unemployment_rate$rate <- ca_unemployment_rate$ca_total_workforce/ca_unemployment_rate$Year
plot(ca_unemployment_rate$rate, ca_unemployment_rate$Year, type = "l", ylim=c(0,max(ca_unemployment_rate$rate)))
